# Terminal-Bench Green Agent Configuration
# Non-sensitive configuration settings - safe to commit to version control
# For sensitive data (API keys, etc.), use .env file

[project]
name = "terminal-bench-green-agent"
version = "1.0.0"

# Green Agent Settings
[green_agent]
host = "0.0.0.0"                        # Optional: default 0.0.0.0
port = 9999                              # Optional: default 9999
card_path = "src/green_agent/card.toml" # REQUIRED

# White Agent Settings (for testing)
[white_agent]
host = "0.0.0.0"                                 # Optional: default 0.0.0.0
port = 8001                                      # Optional: default 8001
card_path = "white_agent/white_agent_card.toml" # REQUIRED
model = "gpt-4o-mini"                            # REQUIRED (OpenAI model to use, can be overridden by WHITE_AGENT_MODEL env var)

# Terminal-Bench Evaluation Settings
[evaluation]
output_path = "./eval_results"         # Optional: default ./eval_results
n_attempts = 1                          # Optional: default 1
n_concurrent_trials = 1                 # Optional: default 1
timeout_multiplier = 1.0                # Optional: default 1.0
cleanup = false                         # Optional: default false
task_ids = ["hello-world"]              # REQUIRED (list of task IDs to run)

# Dataset Settings (optional - terminal-bench manages datasets automatically)
# [dataset]
# path = "path/to/terminal-bench/tasks" # Optional - only needed for custom datasets
# name = "terminal-bench-core"          # Optional - dataset name for automatic management
# version = "head"                      # Optional - dataset version for automatic management

# Logging Configuration
[logging]
level = "INFO"                                                   # Optional: default INFO
format = "%(asctime)s - %(name)s - %(levelname)s - %(message)s" # Optional: has default

# A2A Protocol Settings
[a2a]
default_input_modes = ["text"]  # Optional: default ["text"]
default_output_modes = ["text"] # Optional: default ["text"]
streaming = true                # Optional: default true

# Command Safety Settings
[safety]
blocked_commands = ["rm", "sudo", "shutdown", "reboot", "halt"] # Optional: has defaults
